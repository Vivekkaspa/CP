#include<stdio.h>
#include<stdlib.h>
#define N 100000

// Define the main function
int main() {
    // Read in the number of elements in the array
    int n;
    scanf("%d", &n);

    // Read in the elements of the array
    int arr[N];
    for(int i=0; i<n; i++) {
        scanf("%d", &arr[i]);
    }

    // Initialize variables
    int max_positive_product = 1;
    int max_negative_product = 1;
    int count_negative = 0;

    // Iterate through the array
    for(int i=0; i<n; i++) {
        // If the current element is positive, multiply it by max_positive_product
        if(arr[i] > 0) {
            max_positive_product *= arr[i];
        }
        // If the current element is negative, multiply it by max_negative_product and increment count_negative
        else if(arr[i] < 0) {
            max_negative_product *= arr[i];
            count_negative++;
        }
        // If the current element is zero, set both max_positive_product and max_negative_product to 1
        else {
            max_positive_product = 1;
            max_negative_product = 1;
        }
    }

    // If the count_negative is odd and there is more than one negative element in the array, divide max_positive_product by the smallest negative number
    if(count_negative % 2 == 1) {
        int smallest_negative = INT_MAX;
        for(int i=0; i<n; i++) {
            if(arr[i] < 0 && arr[i] < smallest_negative) {
                smallest_negative = arr[i];
            }
        }
        max_positive_product /= smallest_negative;
    }

    // Print the maximum product subset
    printf("Maximum product subset: %d\n", max_positive_product);

    return 0;
}
