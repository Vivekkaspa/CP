#include <stdio.h>
#include <stdbool.h>

#define NUM_RESOURCES 3

bool is_possible_to_survive(int island_resources[], int supplies[], int time_to_survive) {
    int i, j;
    int required_supplies[NUM_RESOURCES];
    
    // Sort resources in order of importance
    for (i = 0; i < NUM_RESOURCES; i++) {
        for (j = i + 1; j < NUM_RESOURCES; j++) {
            if (island_resources[j] > island_resources[i]) {
                int temp = island_resources[j];
                island_resources[j] = island_resources[i];
                island_resources[i] = temp;
            }
        }
    }
    
    // Calculate required supplies
    required_supplies[0] = island_resources[0] * time_to_survive;  // Food
    required_supplies[1] = island_resources[1] * time_to_survive;  // Water
    required_supplies[2] = island_resources[2];  // Shelter
    
    // Check if we have enough supplies to survive
    int available_supplies[NUM_RESOURCES] = {0};
    for (i = 0; i < NUM_RESOURCES; i++) {
        if (required_supplies[i] <= supplies[i]) {
            available_supplies[i] = required_supplies[i];
            supplies[i] -= required_supplies[i];
        }
        else {
            available_supplies[i] = supplies[i];
            supplies[i] = 0;
        }
    }
    
    // Check if we have enough supplies to survive
    for (i = 0; i < NUM_RESOURCES; i++) {
        if (available_supplies[i] == 0) {
            return false;
        }
    }
    
    return true;
}

int main() {
    // Example inputs
    int island_resources[NUM_RESOURCES] = {5, 4, 3};
    int supplies[NUM_RESOURCES] = {10, 8, 5};
    int time_to_survive = 2;
    
    // Check if it is possible to survive
    if (is_possible_to_survive(island_resources, supplies, time_to_survive)) {
        printf("Possible to survive.\n");
    }
    else {
        printf("Not possible to survive.\n");
    }
    
    return 0;
}
