#include <stdio.h>
#include <string.h>

#define MAX_LENGTH 100

void swap(char *a, char *b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}

void rearrange(char *str) {
    int freq[26] = {0}; // frequency array for characters
    int n = strlen(str);

    for (int i = 0; i < n; i++) {
        freq[str[i] - 'a']++; // count frequency of each character
    }

    int pos = 0;
    while (pos < n) {
        int max_freq = -1;
        char max_char;

        // find the character with the maximum frequency that is not the same as the previous character
        for (int i = 0; i < 26; i++) {
            if (freq[i] > max_freq && (pos == 0 || i != str[pos-1] - 'a')) {
                max_freq = freq[i];
                max_char = 'a' + i;
            }
        }

        if (max_freq == -1) {
            // no character found, cannot rearrange string
            printf("Cannot rearrange string.\n");
            return;
        }

        // move the maximum frequency character to the current position and update frequency array
        str[pos] = max_char;
        freq[max_char - 'a']--;
        pos++;
    }

    printf("Rearranged string: %s\n", str);
}

int main() {
    char str[MAX_LENGTH];
    printf("Enter a string: ");
    fgets(str, MAX_LENGTH, stdin);
    str[strcspn(str, "\n")] = '\0';

    rearrange(str);

    return 0;
}
