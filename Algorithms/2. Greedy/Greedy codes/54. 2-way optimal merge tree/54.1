#include <stdio.h>
#include <stdlib.h>

struct Node {
    int value;
    struct Node *left, *right;
};

struct Node* create_node(int value) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->value = value;
    node->left = node->right = NULL;
    return node;
}

struct Node* merge_tree(int arr[], int start, int end) {
    if (start == end) {
        return create_node(arr[start]);
    }
    int mid = (start + end) / 2;
    struct Node* left = merge_tree(arr, start, mid);
    struct Node* right = merge_tree(arr, mid + 1, end);
    struct Node* root = create_node(left->value + right->value);
    root->left = left;
    root->right = right;
    return root;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8};
    int n = sizeof(arr) / sizeof(arr[0]);
    struct Node* root = merge_tree(arr, 0, n - 1);
    return 0;
}
