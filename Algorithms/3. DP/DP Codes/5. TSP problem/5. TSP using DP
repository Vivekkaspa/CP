#include<stdio.h>
#include<limits.h>

#define N 4 // Number of cities

int dist[N][N] = { {0, 10, 15, 20},
                   {10, 0, 35, 25},
                   {15, 35, 0, 30},
                   {20, 25, 30, 0} }; // Distance matrix

int visited_all = (1 << N) - 1; // All cities visited

int tsp(int mask, int pos)
{
    if(mask == visited_all) // Base case - all cities visited
        return dist[pos][0]; // Return to the starting city
    
    int ans = INT_MAX;
    
    for(int i=0; i<N; i++)
    {
        if((mask & (1 << i)) == 0) // If city i has not been visited
        {
            int new_mask = mask | (1 << i);
            int new_ans = dist[pos][i] + tsp(new_mask, i);
            ans = (ans < new_ans) ? ans : new_ans;
        }
    }
    
    return ans;
}

int main()
{
    int start = 0; // Starting city
    
    int ans = tsp(1, start); // Start with the first city
    
    printf("The minimum cost of visiting all cities is %d\n", ans);
    
    return 0;
}
