KMP-Search(text, pattern):
    n = length(text)
    m = length(pattern)
    lps[m] = {0} //initialize the lps array with 0
    computeLPSArray(pattern, m, lps) //preprocess the pattern to create lps array
    i = 0 //index for text
    j = 0 //index for pattern
    while i < n:
        if pattern[j] == text[i]:
            j++
            i++
        if j == m:
            print "Found pattern at index " i-j
            j = lps[j-1]
        else if i < n and pattern[j] != text[i]:
            if j != 0:
                j = lps[j-1]
            else:
                i++

computeLPSArray(pattern, m, lps):
    len = 0
    i = 1
    lps[0] = 0
    while i < m:
        if pattern[i] == pattern[len]:
            len++
            lps[i] = len
            i++
        else:
            if len != 0:
                len = lps[len-1]
            else:
                lps[i] = 0
                i++
