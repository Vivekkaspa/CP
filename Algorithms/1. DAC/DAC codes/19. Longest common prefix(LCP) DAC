#include <stdio.h>
#include <string.h>
#include<stdlib.h>

int min(int a, int b) {
    return (a < b) ? a : b;
}

int getLCP(char **strs, int left, int right) {
    if (left == right) {
        return strlen(strs[left]);
    }

    int mid = (left + right) / 2;

    int leftLCP = getLCP(strs, left, mid);
    int rightLCP = getLCP(strs, mid + 1, right);

    int commonLCP = min(leftLCP, rightLCP);

    for (int i = 0; i < commonLCP; i++) {
        if (strs[left][i] != strs[right][i]) {
            return i;
        }
    }

    return commonLCP;
}

char *longestCommonPrefix(char **strs, int strsSize) {
    if (strsSize == 0) {
        return "";
    }

    int lcpLen = getLCP(strs, 0, strsSize - 1);

    char *lcp = (char *) malloc(sizeof(char) * (lcpLen + 1));
    strncpy(lcp, strs[0], lcpLen);
    lcp[lcpLen] = '\0';

    return lcp;
}

int main() {
    char *strs[] = {"flower", "flow", "flight"};
    int strsSize = sizeof(strs) / sizeof(strs[0]);

    char *lcp = longestCommonPrefix(strs, strsSize);

    printf("Longest Common Prefix: %s\n", lcp);

    return 0;
}
